#!/bin/bash

#
# i added a loading bar for fun
clear
sleep 1
echo "loading Metapod - "
sleep 1
clear
echo "loading Metapod \ "
sleep 1
clear
echo "loading Metapod | "
sleep 1
clear
echo "loading Metapod / "
sleep 1
clear
echo "loading Metapod - "
sleep 1
clear
echo "loading Metapod \ "
sleep 1
clear

#
#i added a cool screen menu thinggy
sleep 1
echo "####################################################"
echo "###   #######   ######### METAPOD ##################"
sleep 1
echo "###    #####    ####################################"
echo "###  #  ###  #  ######### v1.0 #####################"
sleep 1
echo "###  ##  #  ##  ####################################"
echo "###  ###   ###  ######### BY: M.L ##################"
sleep 1
echo "####################################################"
sleep 1
echo "########## HARDENING IS SUPER EFFECTIVE!!!##########"
echo "####################################################"
sleep 2

#
#here i made some pre settings before you go into the main menu you can start useing it right out of the box
#rules
greenmoderule1="y"
greenmoderule2="y"
greenmoderule3="y"
redmoderule1="y"
redmoderule2="n"
redmoderule3="n"
code01="n"
code02="y"

#
#here i did a until loop for this menu 
until [[ "$EXIT" = "8" ]]; do
clear
cat <<-_END_
####################################################
###   #######   ######### METAPOD ##################
###    #####    ####################################
###  #  ###  #  ######### v1.0 #####################
###  ##  #  ##  ####################################
###  ###   ###  ######### BY: M.L ##################
####################################################
########## HARDENING IS SUPER EFFECTIVE!!!##########
####################################################
 -------<MODES>-------
|| 1.GREEN      mode ||
|| 3.RED        mode ||
|| 4.reset	     ||
 ---------------------
 -----<OPTIONS>-----
|| 5.Mode Options  ||
|| 6.System Update ||
|| 7.help?         ||
|| 8.exit          ||
 -------------------
 -----------------<WARNING>-----------------
|###########################################|
|################# CODE 0 ##################|
|### WARNING!!! do not use unless needed ###|
|###########################################|
 -----------------<CAUTION>-----------------
_END_


#
#due to some isues i could get to work unless i unset the varibles
#sudo iptables -f will flush all iptable rules
#sudo passwd -l root will disable the root account
#the two commands below will copy and make backups of the documents and Downloads folder
#and store it in a folder called /backupmetapod/
#sudo cp -R ~/Downloads/* /backupsmetapod/
#sudo cp -R ~/Documents/* /backupsmetapod/
#also rm -r /backupsmetapod will rm the backup files
#also i made a iptables rule that will disable the internet
# to sum this up green mode turns everything off and red mode turns everthing on


unset yesorno5
unset EXIT4
unset yesorno4
unset EXIT5

echo "Output Options [1,2,3,4,5,6,7,8,CODE 0]"
read -p "please select from one of the outputs above " EXIT
        if [[ "$EXIT" = "1" ]]; then


		if [[ "$greenmoderule1" = "y" ]]; then
			sudo iptables -F


                fi
		if [[ "$greenmoderule2" = "y" ]]; then
			sudo passwd -l root
                fi
		if [[ "$greenmoderule3" = "y" ]]; then
			sudo rm -r /backupsmetapod
                fi



		elif [[ "$EXIT" = "3" ]]; then
             		sudo iptables -F

                	if [[ "$redmoderule1" = "y" ]]; then
                        sudo iptables -A INPUT -p all -j DROP
                        sudo iptables -A OUTPUT -p all -j DROP
                fi
                if [[ "$redmoderule2" = "y" ]]; then
                        sudo passwd root
		fi
		if [[ "$redmoderule3" = "y" ]]; then
			sudo mkdir /backupsmetapod
                        sudo cp -R ~/Downloads/* /backupsmetapod/
                        sudo cp -R ~/Documents/* /backupsmetapod/

                fi


	elif [[ "$EXIT" = "4" ]]; then
		until [[ "$yesorno4" = "n" ]]; do
			read -p "are you sure you would like to reset the mode options [y/n] " yesorno4
                	if [[ "$yesorno4" = "y" ]]; then
				unset greenmoderule1
				unset greenmoderule2
				unset greenmoderule3
				unset greenmoderule4
				unset redmoderule1
				unset redmoderule2
				unset redmoderule3
				unset redmoderule4
				break

			elif [[ "$yesorno4" = "n" ]]; then
				clear

			else
				clear
				echo "not a option"
				sleep 3
				clear

			fi
		done

#
#if you select mode options it will prompt you with a nother menu
#were you can custmize the option for red and green mode
        elif [[ "$EXIT" = "5" ]]; then
		until [[ "$EXIT5" = "6" ]]; do
		unset yesorno5
		unset yesorno51
		unset EXIT5
		clear
		cat <<-_END5_
 ===================================
||#################################||
||### OPTIONS AND CUSTOMIZATION ###||
||#################################||
 ===================================
 what would you like to modify?
 _________________
|| 1.green mode  ||
|| 3.red mode    ||
 ____________
|| 4.code 0 ||
 ___________
|| 5.help? ||
|| 6.exit  ||
_END5_

#
#while in green mode this is were you would select what you would like off if selected
		echo "Output Options [1,3,4,5,6]"
		read -p "select a option " EXIT5
			if [[ "$EXIT5" = "1" ]]; then
				until [[ "$yesorno5" = "n" ]]; do
					clear
					unset yesorno51
					cat <<-_END5.1_
 _____________________
||GREEN MODE SETTINGS||
 _______
||y/on ||
||n/off||
_END5.1_

					echo
					echo "firwall is 	$greenmoderule1"
					echo "root user is 	$greenmoderule2"
					echo "backups  is 	$greenmoderule3"
					echo
					echo "these are your current rules setting for green mode"
					read -p "would you like to modify any of these settings [y/n] " yesorno5
					if [[ "$yesorno5" = "y" ]]; then
						clear
						until [[ "$yesorno51" = "y" ]]; do
							read -p "would you like to enable internet	[y/n] " greenmoderule1
							read -p "would you like to disable root user 	[y/n] " greenmoderule2
							read -p "would you like to turn off backups     [y/n] " greenmoderule3
							if [ "$greenmoderule1" != "y" ] && [ "$greenmoderule1" != "n" ]; then
								echo "sorry you entered invaled input please try again"
                                                                sleep 3
							elif  [ "$greenmoderule2" != "y" ] && [ "$greenmoderule2" != "n" ]; then
								echo "sorry you entered invaled input please try again"
                                                                sleep 3
							elif  [ "$greenmoderule3" != "y" ] && [ "$greenmoderule3" != "n" ]; then
								echo "sorry you entered invaled input please try again"
                                                                sleep 3
							else
								read -p "are you sure you would like to proceed with these settings [y/n] " yesorno51
							fi
						done
					fi
				done

#
#while in red mode this is were you would select what you would like on if selected
			elif [[ "$EXIT5" = "3" ]]; then
				until [[ "$yesorno5" = "n" ]]; do
                                        clear
                                        unset yesorno51
                                        cat <<-_END5.1_
 ___________________
||RED MODE SETTINGS||
 _______
||y/on ||
||n/off||
_END5.1_

                                        echo
                                        echo "firewall is 	$redmoderule1"
                                        echo "root users is 	$redmoderule2"
                                        echo "backups is 	$redmoderule3"
                                        echo
                                        echo "these are your current rules setting for green mode"
                                        read -p "would you like to modify any of these settings [y/n] " yesorno5
                                        if [[ "$yesorno5" = "y" ]]; then
                                                until [[ "$yesorno51" = "y" ]]; do
                                                        clear
							read -p "would you like to enable internet      [y/n] " gedmoderule1
                                                        read -p "would you like to disable root user    [y/n] " redmoderule2
                                                        read -p "would you like to turn off backups     [y/n] " redmoderule3
                                                        if [ "$redmoderule1" != "y" ] && [ "$redmoderule1" != "n" ]; then
                                                                echo "sorry you entered invaled input please try again"
                                                                sleep 3
                                                        elif  [ "$redmoderule2" != "y" ] && [ "$redmoderule2" != "n" ]; then
                                                                echo "sorry you entered invaled input please try again"
                                                                sleep 3
                                                        elif  [ "$redmoderule3" != "y" ] && [ "$redmoderule3" != "n" ]; then
                                                                echo "sorry you entered invaled input please try again"
                                                                sleep 3

                                                        else
                                                                read -p "are you sure you would like to proceed with these settings [y/n] " yesorno51
                                                        fi
                                                done
                                        fi
                                done

#
#code 0 was a work in progress
# it does not work its just simulated 
			elif [[ "$EXIT5" = "4" ]]; then
				until [[ "$yesorno5" = "n" ]]; do
                                        clear
                                        unset yesorno51
                                        cat <<-_END5.1_
 ______________
|| ! code 0 ! ||
 _______
||y/on ||
||n/off||
_END5.1_

                                        echo
                                        echo "shut down mode is  $code01"
                                        echo "lock mode is       $code02"
                                        echo
                                        echo "these are your current rules setting for green mode"
                                        read -p "would you like to modify any of these settings [y/n] " yesorno5
                                        if [[ "$yesorno5" = "y" ]]; then
                                                until [[ "$yesorno51" = "y" ]]; do
                                                        clear
                                                        read -p "would you like to enable code 0 to shut down [y/n] " code01
                                                        read -p "would you like to enable safety lock on code 0 [y/n] " code02
                                                        if [ "$code01" != "y" ] && [ "$code01" != "n" ]; then
                                                                echo "sorry you entered invaled input please try again"
                                                                sleep 3
                                                        elif [ "$code02" != "y" ] && [ "$code02" != "n" ]; then
                                                                echo "sorry you entered invaled input please try again"
                                                                sleep 3

                                                        else
                                                                read -p "are you sure you would like to proceed with these settings [y/n] " yesorno51
                                                        fi
                                                done
                                        fi
                                done

			elif [[ "$EXIT5" = "5" ]]; then
				clear
                                cat <<-_END2_
when green mode is selected any thing that is change to a y means that it will be disabled
when red mode is selected any thing that is changed to a y means that it will be enabled
code 0 was a work in progress was a work in progress
when exit is selected it will bring you back to the main menu
help prompts you with this menu
_END2_

                                sleep 3
				read -p "press enter to continue"
				clear

			elif [[ "$EXIT5" = "6" ]]; then
                                clear
				break
			else
				clear
                		echo "  !!NOT A OPTION!! "
                		echo "     try again  "
                		sleep 3
			fi

		done

#
#here i made and gave the ability to update the current linux system with loading bar ofcoruse
        elif [[ "$EXIT" = "6" ]]; then
                clear
                until [[ "$yesorno6" = "n" ]]; do
                read -p "are you sure you would like to perform a System Update [y/n] " yesorno6
                        if [[ "$yesorno6" = "y" ]]; then
                                clear
				sleep 1
				echo "loading - "
				sleep 1
				clear
				echo "loading \ "
				sleep 1
				clear
				echo "loading | "
				sleep 1
				clear
				echo "loading / "
				sleep 1
				clear
				echo "loading - "
                                sleep 1
                                clear
				apt-get update
				echo
				echo "please wait as upgrade is about to begin"
				sleep 1
				echo
				echo "."
				sleep 1
				echo "."
				sleep 1
				echo "."
				sleep 1
				echo "."
				sleep 1
				echo
				apt-get upgrade -y
				echo
				sleep 1
                                echo "."
                                sleep 1
                                echo "."
                                sleep 1
                                echo "."
                                sleep 1
                                echo
				echo "tehe all done"!
				echo
				read -p "press ENTER to go back to main menu"
				break



                        elif [[ "$yesorno6" = "n" ]]; then
                                clear


                        else
                                echo "  not a option"
                                echo "  try again!"
                                sleep 2
                                clear
                        fi
                done

#
# here i made a help guid on how to use metapod
        elif [[ "$EXIT" = "7" ]]; then
                clear
                cat <<-_END2_
when green mode is selected it will turn on the options you enable from the mode options menu
when red mode is selected it will turn on the options you enable from the mode options menu
when reset is selected it will disable all of your current setting for green and red mode
when mode options is selected it will prompt you with a menu for you to enable or disable options
when system update is selected it will allow you to update and upgrade your current linux system
when help is selected it will prompt you with this menu
when exit is selected it will exit metapod and end the script
_END2_
		sleep 3
                read -p "press enter to continue"
                clear
#
#when this option is selected it will exit metapod
        elif [[ "$EXIT" = "8" ]]; then
                echo "exiting Metapod"
                sleep 3

#
#this is what code 0 would do if it worked 

        elif [[ "$EXIT" = "CODE 0" ]]; then
		until [[ "code02" = "y" ]]; do
                	if [[ "$code02" = "y" ]]; then
				clear
				echo "lock mode is enabled please go to mode options to disable lock mode"
				sleep 5
				break


			elif [[ "$code02" = "n" ]]; then
				if [[ "$code01" = "y" ]]; then
                        		echo "yes rule was enabled "
                        		sleep 2
					break
				fi
				else
	                                echo "no rule is enabled"
                                        sleep 2
                                        break
                                fi


		done

#
#while in the menu if anything other then the outputs a picked it will say not a option
        	else
                clear
                echo "  !!NOT A OPTION!! "
                echo "     try again  "
                sleep 3
        fi




done

clear

#
#cool graphics yay
sleep 1
echo "####################################################"
echo "###   #######   ######### METAPOD ##################"
sleep 1
echo "###    #####    ####################################"
echo "###  #  ###  #  ######### v1.0 #####################"
sleep 1
echo "###  ##  #  ##  ####################################"
echo "###  ###   ###  ######### BY: M.L ##################"
sleep 1
echo "####################################################"
sleep 1
echo "########## HARDENING IS SUPER EFFECTIVE!!!##########"
echo "####################################################"
sleep 2
